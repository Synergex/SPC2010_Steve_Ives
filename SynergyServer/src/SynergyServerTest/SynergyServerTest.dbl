import System.Collections

.include "CUSTOMER" repository, structure="strCustomer", end
.include "CONTACT"  repository, structure="strContact", end

main SynergyServerTest

	record 
		tt			,int
		ix			,int
		customers	,@ArrayList
		customer	,strCustomer
		contacts	,@ArrayList
		contact		,strContact
		contactB	,@strContact
		addresses	,@ArrayList
		address		,strAddress
		addressB	,@strAddress
	endrecord
	
proc
	
	open(tt=syn_freechn(),i,"tt:")
	
	;;-------------------------------------------------------------------------
	;;Test for GetAllCustomers
	;;
	begin
		customers = new ArrayList()

		GetAllCustomers(customers)
		writes(tt,"Found " + string(customers.Count) + " customers.")
		;;
		if (customers.Count>1)
		begin
			customer = (strCustomer)customers[1]
			writes(tt,"First customer ID is " + string(customer.customer_id))
		end
	end
	
	;;-------------------------------------------------------------------------
	;;Test for GetCustomerContacts
	;;
	if (customer!=^null)
	begin
		contacts = new ArrayList()

		GetCustomerContacts(customer.customer_id,contacts)
		writes(tt,"Found " + string(contacts.Count) + " contacts.")		

		;;Display contacts
		if (contacts.Count)
		begin
			foreach contactB in contacts
			begin
				contact = (strContact)contactB
				writes(tt,"Contact ID " + string(contact.contact_id) + " is " + atrim(contact.friendly_name))
			end
		end

	end
	
	;;-------------------------------------------------------------------------
	;;Test for GetCustomerAddresses
	;;
	if (customer!=^null)
	begin
		addresses = new ArrayList()

		GetCustomerAddresses(customer.customer_id,addresses)
		writes(tt,"Found " + string(addresses.Count) + " addresses.")

		;;Display addresses
		if (addresses.Count)
		begin
			foreach addressB in addresses
			begin
				address = (strAddress)addressB
				writes(tt,"Address ID " + string(address.address_id) + " is " + atrim(address.address1))
			end
		end
	end
	
	;;-------------------------------------------------------------------------
	;;Test for GetCustomerForUpdate and UpdateCustomer
	;;
	begin
		data mh_grfa		,i4
		data tmpCustomer	,strCustomer
		data msg			,string

		mh_grfa = mem_proc(DM_ALLOC,1)
		
		if (GetCustomerForUpdate(customer.customer_id,tmpCustomer,mh_grfa,msg)==METHOD_STATUS.SUCCESS) then
		begin
			^a(tmpCustomer.date_modified) = datetime()
			if (UpdateCustomer(tmpCustomer,mh_grfa,msg)==METHOD_STATUS.SUCCESS) then 
				writes(tt,"Customer record was updated.")
			else
				writes(tt,"Customer record was NOT updated. " + msg)
		end
		else
			writes(tt,"*ERROR*: Failed to read customer for update! " + msg)
		
		mh_grfa = mem_proc(DM_FREE,mh_grfa)
	end
	
	;;Clean up
	clear customers, contacts, addresses
	
	;;All done
	display(tt,"Press a key: ")
	accept(tt,ix)
	close tt
	stop
	
endmain
