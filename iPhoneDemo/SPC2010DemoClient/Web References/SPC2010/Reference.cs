// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace SPC2010DemoClient.SPC2010 {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="SPC2010WebServiceSoap", Namespace="http://psg.synergex.com/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SPC2010WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerContactsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerAddressesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactForUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContactOperationCompleted;
        
        public SPC2010WebService() {
            this.Url = "http://winvm/spc2010/SPC2010WebService.asmx";
        }
        
        public SPC2010WebService(string url) {
            this.Url = url;
        }
        
        public event GetCustomersCompletedEventHandler GetCustomersCompleted;
        
        public event GetCustomerContactsCompletedEventHandler GetCustomerContactsCompleted;
        
        public event GetCustomerAddressesCompletedEventHandler GetCustomerAddressesCompleted;
        
        public event GetContactForUpdateCompletedEventHandler GetContactForUpdateCompleted;
        
        public event UpdateContactCompletedEventHandler UpdateContactCompleted;
        
        /// <remarks>
///Returns a collection of all customer ID's and names.
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://psg.synergex.com/GetCustomers", RequestNamespace="http://psg.synergex.com/", ResponseNamespace="http://psg.synergex.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Customer[] GetCustomers() {
            object[] results = this.Invoke("GetCustomers", new object[0]);
            return ((Customer[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetCustomers(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomers", new object[0], callback, asyncState);
        }
        
        public Customer[] EndGetCustomers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Customer[])(results[0]));
        }
        
        public void GetCustomersAsync() {
            this.GetCustomersAsync(null);
        }
        
        public void GetCustomersAsync(object userState) {
            if ((this.GetCustomersOperationCompleted == null)) {
                this.GetCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersCompleted);
            }
            this.InvokeAsync("GetCustomers", new object[0], this.GetCustomersOperationCompleted, userState);
        }
        
        private void OnGetCustomersCompleted(object arg) {
            if ((this.GetCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks>
///Returns a collection of all contacts for a customer.
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://psg.synergex.com/GetCustomerContacts", RequestNamespace="http://psg.synergex.com/", ResponseNamespace="http://psg.synergex.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Contact[] GetCustomerContacts(int customerId) {
            object[] results = this.Invoke("GetCustomerContacts", new object[] {
                        customerId});
            return ((Contact[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetCustomerContacts(int customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerContacts", new object[] {
                        customerId}, callback, asyncState);
        }
        
        public Contact[] EndGetCustomerContacts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Contact[])(results[0]));
        }
        
        public void GetCustomerContactsAsync(int customerId) {
            this.GetCustomerContactsAsync(customerId, null);
        }
        
        public void GetCustomerContactsAsync(int customerId, object userState) {
            if ((this.GetCustomerContactsOperationCompleted == null)) {
                this.GetCustomerContactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerContactsCompleted);
            }
            this.InvokeAsync("GetCustomerContacts", new object[] {
                        customerId}, this.GetCustomerContactsOperationCompleted, userState);
        }
        
        private void OnGetCustomerContactsCompleted(object arg) {
            if ((this.GetCustomerContactsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerContactsCompleted(this, new GetCustomerContactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks>
///Returns a collection of all addresses for a customer.
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://psg.synergex.com/GetCustomerAddresses", RequestNamespace="http://psg.synergex.com/", ResponseNamespace="http://psg.synergex.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Address[] GetCustomerAddresses(int customerId) {
            object[] results = this.Invoke("GetCustomerAddresses", new object[] {
                        customerId});
            return ((Address[])(results[0]));
        }
        
        public System.IAsyncResult BeginGetCustomerAddresses(int customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomerAddresses", new object[] {
                        customerId}, callback, asyncState);
        }
        
        public Address[] EndGetCustomerAddresses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Address[])(results[0]));
        }
        
        public void GetCustomerAddressesAsync(int customerId) {
            this.GetCustomerAddressesAsync(customerId, null);
        }
        
        public void GetCustomerAddressesAsync(int customerId, object userState) {
            if ((this.GetCustomerAddressesOperationCompleted == null)) {
                this.GetCustomerAddressesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerAddressesCompleted);
            }
            this.InvokeAsync("GetCustomerAddresses", new object[] {
                        customerId}, this.GetCustomerAddressesOperationCompleted, userState);
        }
        
        private void OnGetCustomerAddressesCompleted(object arg) {
            if ((this.GetCustomerAddressesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerAddressesCompleted(this, new GetCustomerAddressesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks>
///Returns a current contact record and its current GRFA
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://psg.synergex.com/GetContactForUpdate", RequestNamespace="http://psg.synergex.com/", ResponseNamespace="http://psg.synergex.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Method_status GetContactForUpdate(int customerId, int contactId, out Contact contact, out byte[] grfa, out string msg) {
            object[] results = this.Invoke("GetContactForUpdate", new object[] {
                        customerId,
                        contactId});
            msg = ((string)(results[3]));
            grfa = ((byte[])(results[2]));
            contact = ((Contact)(results[1]));
            return ((Method_status)(results[0]));
        }
        
        public System.IAsyncResult BeginGetContactForUpdate(int customerId, int contactId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetContactForUpdate", new object[] {
                        customerId,
                        contactId}, callback, asyncState);
        }
        
        public Method_status EndGetContactForUpdate(System.IAsyncResult asyncResult, out Contact contact, out byte[] grfa, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[3]));
            grfa = ((byte[])(results[2]));
            contact = ((Contact)(results[1]));
            return ((Method_status)(results[0]));
        }
        
        public void GetContactForUpdateAsync(int customerId, int contactId) {
            this.GetContactForUpdateAsync(customerId, contactId, null);
        }
        
        public void GetContactForUpdateAsync(int customerId, int contactId, object userState) {
            if ((this.GetContactForUpdateOperationCompleted == null)) {
                this.GetContactForUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactForUpdateCompleted);
            }
            this.InvokeAsync("GetContactForUpdate", new object[] {
                        customerId,
                        contactId}, this.GetContactForUpdateOperationCompleted, userState);
        }
        
        private void OnGetContactForUpdateCompleted(object arg) {
            if ((this.GetContactForUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactForUpdateCompleted(this, new GetContactForUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks>
///Updates a contact record if it hasn't already been changed by another user
///</remarks>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://psg.synergex.com/UpdateContact", RequestNamespace="http://psg.synergex.com/", ResponseNamespace="http://psg.synergex.com/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Method_status UpdateContact(ref Contact contact, ref byte[] grfa, out string msg) {
            object[] results = this.Invoke("UpdateContact", new object[] {
                        contact,
                        grfa});
            msg = ((string)(results[3]));
            grfa = ((byte[])(results[2]));
            contact = ((Contact)(results[1]));
            return ((Method_status)(results[0]));
        }
        
        public System.IAsyncResult BeginUpdateContact(Contact contact, byte[] grfa, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateContact", new object[] {
                        contact,
                        grfa}, callback, asyncState);
        }
        
        public Method_status EndUpdateContact(System.IAsyncResult asyncResult, out Contact contact, out byte[] grfa, out string msg) {
            object[] results = this.EndInvoke(asyncResult);
            msg = ((string)(results[3]));
            grfa = ((byte[])(results[2]));
            contact = ((Contact)(results[1]));
            return ((Method_status)(results[0]));
        }
        
        public void UpdateContactAsync(Contact contact, byte[] grfa) {
            this.UpdateContactAsync(contact, grfa, null);
        }
        
        public void UpdateContactAsync(Contact contact, byte[] grfa, object userState) {
            if ((this.UpdateContactOperationCompleted == null)) {
                this.UpdateContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContactCompleted);
            }
            this.InvokeAsync("UpdateContact", new object[] {
                        contact,
                        grfa}, this.UpdateContactOperationCompleted, userState);
        }
        
        private void OnUpdateContactCompleted(object arg) {
            if ((this.UpdateContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContactCompleted(this, new UpdateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psg.synergex.com/")]
    public partial class Customer {
        
        /// <remarks/>
        public int CustomerId;
        
        /// <remarks/>
        public string CustomerName;
        
        /// <remarks/>
        public System.DateTime DateCreated;
        
        /// <remarks/>
        public System.DateTime DateModified;
        
        /// <remarks/>
        public string Status;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psg.synergex.com/")]
    public partial class Contact {
        
        /// <remarks/>
        public int CustomerId;
        
        /// <remarks/>
        public int ContactId;
        
        /// <remarks/>
        public string Salutation;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string FriendlyName;
        
        /// <remarks/>
        public string WorkPhone;
        
        /// <remarks/>
        public string HomePhone;
        
        /// <remarks/>
        public string Email;
        
        /// <remarks/>
        public string Department;
        
        /// <remarks/>
        public string Title;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psg.synergex.com/")]
    public partial class Address {
        
        /// <remarks/>
        public int CustomerId;
        
        /// <remarks/>
        public int AddressId;
        
        /// <remarks/>
        public string AddressType;
        
        /// <remarks/>
        public string Street;
        
        /// <remarks/>
        public string City;
        
        /// <remarks/>
        public string State;
        
        /// <remarks/>
        public string Zip;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://psg.synergex.com/")]
    public enum Method_status {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Info_error,
        
        /// <remarks/>
        Fatal_error,
    }
    
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Customer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetCustomersCompletedEventHandler(object sender, GetCustomersCompletedEventArgs args);
    
    public partial class GetCustomerContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Contact[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetCustomerContactsCompletedEventHandler(object sender, GetCustomerContactsCompletedEventArgs args);
    
    public partial class GetCustomerAddressesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerAddressesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Address[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Address[])(this.results[0]));
            }
        }
    }
    
    public delegate void GetCustomerAddressesCompletedEventHandler(object sender, GetCustomerAddressesCompletedEventArgs args);
    
    public partial class GetContactForUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactForUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Method_status Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Method_status)(this.results[0]));
            }
        }
        
        public Contact contact {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[1]));
            }
        }
        
        public byte[] grfa {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
        
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    public delegate void GetContactForUpdateCompletedEventHandler(object sender, GetContactForUpdateCompletedEventArgs args);
    
    public partial class UpdateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Method_status Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Method_status)(this.results[0]));
            }
        }
        
        public Contact contact {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Contact)(this.results[1]));
            }
        }
        
        public byte[] grfa {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
        
        public string msg {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    public delegate void UpdateContactCompletedEventHandler(object sender, UpdateContactCompletedEventArgs args);
}
